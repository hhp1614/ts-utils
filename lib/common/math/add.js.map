{"version":3,"file":"add.js","sourceRoot":"","sources":["../../../src/common/math/add.ts"],"names":[],"mappings":";;;AAAA,gCAAkC;AAElC;;;;;GAKG;AACH,SAAgB,GAAG,CAAC,CAAS,EAAE,CAAS;IACtC,IAAI,CAAC,eAAQ,CAAC,CAAC,CAAC,EAAE;QAChB,MAAM,IAAI,SAAS,CAAC,WAAW,CAAC,CAAA;KACjC;IACD,IAAI,CAAC,eAAQ,CAAC,CAAC,CAAC,EAAE;QAChB,MAAM,IAAI,SAAS,CAAC,WAAW,CAAC,CAAA;KACjC;IAED,kBAAkB;IAClB,IAAI,CAAC,GAAG,CAAC,CAAA;IACT,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;IACpB,IAAI,IAAI,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;IACpB,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IAC1C,IAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAA;IAC1C,IAAI,SAAS,IAAI,SAAS,EAAE;QAC1B,IAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAA;QAC7B,IAAM,IAAI,GAAG,SAAS,CAAC,MAAM,CAAA;QAC7B,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAA;KAC9B;IACD,KAAK;IACL,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAA;IACpC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAA;IACpC,IAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,CAAA;IAC1C,OAAO,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;AACjC,CAAC;AAxBD,kBAwBC","sourcesContent":["import { isNumber } from '../type'\n\n/**\n * 精确加法运算 `x + y`\n * @description 如果要做减法，只需第二个参数即被减数传负值即可\n * @param x 加数\n * @param y 加数\n */\nexport function add(x: number, y: number) {\n  if (!isNumber(x)) {\n    throw new TypeError('`x` 必须是数字')\n  }\n  if (!isNumber(y)) {\n    throw new TypeError('`y` 必须是数字')\n  }\n\n  // 记录两个加数中最长的小数位长度\n  let m = 0\n  let xStr = String(x)\n  let yStr = String(y)\n  const xStrFloat = xStr.split('.')[1] || ''\n  const yStrFloat = yStr.split('.')[1] || ''\n  if (xStrFloat || yStrFloat) {\n    const xLen = xStrFloat.length\n    const yLen = yStrFloat.length\n    m = xLen > yLen ? xLen : yLen\n  }\n  // 补零\n  xStr = x.toFixed(m).replace('.', '')\n  yStr = y.toFixed(m).replace('.', '')\n  const result = Number(xStr) + Number(yStr)\n  return result / Math.pow(10, m)\n}\n"]}
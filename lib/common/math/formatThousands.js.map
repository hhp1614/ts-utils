{"version":3,"file":"formatThousands.js","sourceRoot":"","sources":["../../../src/common/math/formatThousands.ts"],"names":[],"mappings":";;;AAAA,gCAA6C;AAE7C;;;;GAIG;AACH,SAAgB,eAAe,CAAC,GAAoB;IAClD,IAAI,CAAC,eAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,eAAQ,CAAC,GAAG,CAAC,EAAE;QACpC,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAC;KACxC;IACD,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,iCAAiC,EAAE,GAAG,CAAC,CAAC;AACrE,CAAC;AALD,0CAKC","sourcesContent":["import { isNumber, isString } from '../type';\r\n\r\n/**\r\n * 数字千分位格式化\r\n * @description 支持负数和小数，小数部分不会参与格式化\r\n * @param num 数字或可以转换成数字的字符串\r\n */\r\nexport function formatThousands(num: number | string) {\r\n  if (!isNumber(num) && !isString(num)) {\r\n    throw new TypeError('`num` 必须是数字或字符串');\r\n  }\r\n  return String(num).replace(/(?<=(^|\\s)-?\\d+)(?=(\\d{3})+\\b)/g, ',');\r\n}\r\n"]}
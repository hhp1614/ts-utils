{"version":3,"file":"formatThousands.js","sourceRoot":"","sources":["../../../src/common/math/formatThousands.ts"],"names":[],"mappings":";;;AAAA,gCAA6C;AAE7C;;;;GAIG;AACH,SAAgB,eAAe,CAAC,GAAoB;IAClD,IAAI,CAAC,eAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,eAAQ,CAAC,GAAG,CAAC,EAAE;QACpC,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAC;KACxC;IACD,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,iCAAiC,EAAE,GAAG,CAAC,CAAC;AACrE,CAAC;AALD,0CAKC","sourcesContent":["import { isNumber, isString } from '../type';\n\n/**\n * 数字千分位格式化\n * @description 支持负数和小数，小数部分不会参与格式化\n * @param num 数字或可以转换成数字的字符串\n */\nexport function formatThousands(num: number | string) {\n  if (!isNumber(num) && !isString(num)) {\n    throw new TypeError('`num` 必须是数字或字符串');\n  }\n  return String(num).replace(/(?<=(^|\\s)-?\\d+)(?=(\\d{3})+\\b)/g, ',');\n}\n"]}
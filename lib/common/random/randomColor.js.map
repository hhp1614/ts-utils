{"version":3,"file":"randomColor.js","sourceRoot":"","sources":["../../../src/common/random/randomColor.ts"],"names":[],"mappings":";;;AAAA,yCAAwC;AAYxC;;;GAGG;AACH,SAAS,cAAc,CAAC,IAAU;IAChC,IAAM,OAAO,GAA4B;QACvC,GAAG,EAAE,wBAAwB;QAC7B,IAAI,EAAE,wBAAwB;QAC9B,KAAK,EAAE,wBAAwB;KAChC,CAAC;IACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;QAClB,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;KACxD;IACD,IAAI,GAAG,GAAG,GAAG,CAAC;IACd,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;QAC1B,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,qBAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;KACxC;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAED;;;GAGG;AACH,SAAS,cAAc,CAAC,IAAU;IAChC,IAAM,QAAQ,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;IACtC,IAAM,QAAQ,GAAG,EAAE,CAAC;IACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE;QAC3C,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KAC1D;IACD,OAAO,SAAO,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,MAAG,CAAC;AACtC,CAAC;AAED;;;;GAIG;AACH,SAAgB,WAAW,CAAC,IAAkB,EAAE,IAAkB;IAAtC,qBAAA,EAAA,YAAkB;IAAE,qBAAA,EAAA,YAAkB;IAChE,IAAI,IAAI,KAAK,KAAK,EAAE;QAClB,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;KAC7B;IACD,IAAI,IAAI,KAAK,KAAK,EAAE;QAClB,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;KAC7B;IACD,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;AAC9C,CAAC;AARD,kCAQC","sourcesContent":["import { randomNum } from './randomNum';\r\n\r\n/**\r\n * 随机模式\r\n */\r\ntype Mode = 'all' | 'dark' | 'light';\r\n\r\n/**\r\n * 颜色类型\r\n */\r\ntype Type = 'hex' | 'rgb';\r\n\r\n/**\r\n * 随机十六进制颜色\r\n * @param mode 随机模式\r\n */\r\nfunction randomHexColor(mode: Mode) {\r\n  const modeMap: { [k in Mode]: string } = {\r\n    all: '0123456789abcabcdefdef',\r\n    dark: '0123401234abcabcabcabc',\r\n    light: '5678956789defdefdefdef'\r\n  };\r\n  if (!modeMap[mode]) {\r\n    throw new Error('`mode` 必须是 `all` | `dark` | `light`');\r\n  }\r\n  let res = '#';\r\n  for (let i = 0; i < 6; i++) {\r\n    res += modeMap[mode][randomNum(0, 21)];\r\n  }\r\n  return res;\r\n}\r\n\r\n/**\r\n * 随机 RGB 颜色\r\n * @param mode 随机模式\r\n */\r\nfunction randomRgbColor(mode: Mode) {\r\n  const hexColor = randomHexColor(mode);\r\n  const rgbColor = [];\r\n  for (let i = 1; i < hexColor.length; i += 2) {\r\n    rgbColor.push(parseInt('0x' + hexColor.slice(i, i + 2)));\r\n  }\r\n  return `rgb(${rgbColor.join(',')})`;\r\n}\r\n\r\n/**\r\n * 随机颜色\r\n * @param mode 默认 `all`；`all` 全部颜色中随机，`light` 随机亮色，`dark` 随机暗色\r\n * @param type 默认 `hex`；`hex` 十六进制，`rgb` RGB\r\n */\r\nexport function randomColor(mode: Mode = 'all', type: Type = 'hex') {\r\n  if (type === 'hex') {\r\n    return randomHexColor(mode);\r\n  }\r\n  if (type === 'rgb') {\r\n    return randomRgbColor(mode);\r\n  }\r\n  throw new Error('`type` 必须是 `hex` | `rgb`');\r\n}\r\n"]}